Day 06 :OOPS TASK 

1. https://github.com/rvsp/typescript-oops/blob/master/Practice/Movie.md
--------------------------------------------------------------------------------------------------------------------------------------
The class Movie is stated below. An instance of class Movie represents a film. This class has the following three properties:

title, which is a String representing the title of the movie
studio, which is a String representing the studio that made the movie
rating, which is a String representing the rating of the movie (i.e. PG­13, R, etc)

a) Write a constructor for the class Movie, which takes a String representing the title of the movie, a String representing the studio, 
   and a String representing the rating as its arguments, and sets the respective class properties to these values.   
          constructor(title,studio,rating){
          this.title=title
          this.studio=studio
          this.rating=rating
          }

b) The constructor for the class Movie will set the class property rating to "PG" as default when no rating is provided.    
          getrating(){
          return this.rating

c) Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of only those movies in the 
   input array with a rating of "PG". You may assume the input array is full of Movie instances. The returned array need not be full.
   
   class movie{
    constructor(title,studio,rating){
    this.title=title
    this.studio=studio
    this.rating=rating
    }
    setrating(){
    return this.rating = "PG"
    }

    res=obj1.map(function(item){
    return item.this.rating=="PG"
    })
}
    const obj1=new movie("Casino Royale","Eon Productions","PG13")
    console.log(res)

d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”, the studio “Eon Productions”, and the rating “PG13”
      const obj1=new movie("Casino Royale","Eon Productions","PG­13")


full code: 
class movie{
constructor(title,studio,rating){
this.title=title
this.studio=studio
this.rating=rating
}
getrating(){
return this.rating
}}
const obj1=new movie("Casino Royale","Eon Productions","PG 13")

--------------------------------------------------------------------------------------------------------------------------------------
2. https://github.com/rvsp/typescript-oops/blob/master/Practice/class-circle.md
3. Write a “person” class to hold all the details.
4. write a class to calculate the uber price.

***************************************************************************************************************************************
Day 07:ARRAY METHODS

1. Solving problems using array functions on the rest countries' data (https://restcountries.com/v3.1/all).
  A. Get all the countries from the Asia continent /region using the Filter function
  countries name from asia continent: 
              var xhr=new XMLHttpRequest()
              xhr.open('GET','https://restcountries.com/v3.1/all')
              xhr.responseType='json';
              xhr.send()
              xhr.onload=function(){
                  var responseObj = xhr.response;
                  console.log(responseObj)
              var res=responseObj.filter(function(item){
                  return item.continents=='Asia'
              })
              var final=res.map(function(item){
                  return item.name.common
              })
              console.log(final)
              }
countries name from asia region:
              var xhr=new XMLHttpRequest()
              xhr.open('GET','https://restcountries.com/v3.1/all')
              xhr.responseType='json';
              xhr.send()
              xhr.onload=function(){
                  var responseObj = xhr.response;
                  console.log(responseObj)
              var res=responseObj.filter(function(item){
                  return item.continents=='Asia'
              })
              var final=res.map(function(item){
                  return item.region
              })
              console.log(final)
              }

  B. Get all the countries with a population of less than 2 lakhs using Filter function
  
            var xhr=new XMLHttpRequest()
            xhr.open('GET','https://restcountries.com/v3.1/all')
            xhr.responseType='json';
            xhr.send()
            xhr.onload=function(){
                var responseObj = xhr.response;
                console.log(responseObj)
            var res=responseObj.filter(function(item){
                return item.population<200000
            })
            var final=res.map(function(item){
                return item.name.common
            })
            console.log(final)
            }

  C. Print the following details name, capital, flag using forEach function
  
            var xhr=new XMLHttpRequest()
            xhr.open('GET','https://restcountries.com/v3.1/all')
            xhr.responseType='json';
            xhr.send()
            xhr.onload=function(){
                var responseObj = xhr.response;
                // console.log(responseObj)
            var copy=[];
            responseObj.forEach(item=>{
                copy.push(`${item.name.common},${item.capital},${item.flag}`)
            })
            console.log(...copy)
            }
  
  D. Print the total population of countries using reduce function

            var xhr=new XMLHttpRequest()
            xhr.open('GET','https://restcountries.com/v3.1/all')
            xhr.responseType='json';
            xhr.send()
            xhr.onload=function(){
                var responseObj = xhr.response;
                // console.log(responseObj)
            var copy=[];
            responseObj.forEach(item=>{
                copy.push(`${item.population}`)
            })
            var a=copy.reduce(function(a,b){
                return Number(a)+Number(b);
            })
            console.log(...copy)
            console.log(a)
            }
            
  E. Print the country which uses US Dollars as currency.
        
        var xhr=new XMLHttpRequest()
        xhr.open('GET','https://restcountries.com/v3.1/all')
        xhr.responseType='json';
        xhr.send()
        xhr.onload=function(){
            var responseObj = xhr.response;
            // console.log(responseObj)
        var res=responseObj.filter(item=>{
            return item.currencies && item.currencies.USD
        })
        let final=res.map(function(item){
            return item.name.common
        })
        console.log(...final)
        }
